{"ast":null,"code":"import React from \"react\";\nimport JSSoup from 'jssoup';\nimport http from 'http';\nScrapper = async () => {\n  ////////// AMAZON ///////////\n  let url = \"https://www.amazon.in/Dell-Inspiron-i5-1235U-39-62Cms-D560871WIN9B/dp/B0BH4SCYQ3/ref=sr_1_1_sspa?crid=DZP3SM2XBITL&keywords=dell+i5&qid=1673438956&sprefix=dell+i5%2Caps%2C311&sr=8-1-spons&sp_csd=d2lkZ2V0TmFtZT1zcF9hdGY&psc=1\";\n  let HEADERS = {\n    'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36',\n    'Accept-Language': 'en-US, en;q=0.5'\n  };\n  const response = await fetch(url, {\n    method: 'GET',\n    headers: HEADERS\n  });\n  const text = await response.text();\n  console.log(text);\n\n  // const res  = await axios.get(url, {\n  //     headers : HEADERS\n  // });\n\n  console.log(res);\n\n  // const text = \"tedbsfr\";\n\n  var soup = new JSSoup(text);\n  amazon_img = soup.find('div', attrs = {\n    'id': 'imageBlock'\n  }).find('span', attrs = {\n    'class': 'a-button-text'\n  }).find('img').attrs['src'];\n  // console.log(souper)\n\n  // retrieving product title\n  try {\n    // Outer Tag Object\n    title = soup.find('span', attrs = {\n      'id': 'productTitle'\n    });\n\n    // console.log(title)\n    // Inner Navigable String Object\n    title_value = title.nextElement._text;\n\n    // Title as a string value\n    title_string = title_value.trim().replace(',', '');\n  } catch (AttributeError) {\n    title_string = \"NA\";\n  }\n  console.log(\"product Title = \", title_string);\n\n  // retrieving price\n  try {\n    price_symbol = soup.find(\"span\", attrs = {\n      'class': 'a-price-symbol'\n    }).nextElement._text.trim().replace(',', '');\n    price = soup.find(\"span\", attrs = {\n      'class': 'a-price-whole'\n    }).nextElement._text.trim().replace(',', '');\n    price = price_symbol + price;\n    // we are omitting unnecessary spaces\n    // and commas form our string\n  } catch (AttributeError) {\n    price = \"NA\";\n  }\n  console.log(\"Products price = \", price);\n\n  // retrieving product rating\n  try {\n    rating = soup.find(\"i\", attrs = {\n      'class': 'a-icon a-icon-star a-star-4-5'\n    }).nextElement._text.trim().replace(',', '');\n  } catch (AttributeError) {\n    try {\n      rating = soup.find(\"span\", attrs = {\n        'class': 'a-icon-alt'\n      }).nextElement._text.trim().replace(',', '');\n    } catch {\n      rating = \"NA\";\n    }\n  }\n  console.log(\"Overall rating = \", rating);\n  try {\n    review_count = soup.find(\"span\", attrs = {\n      'id': 'acrCustomerReviewText'\n    }).nextElement._text.trim().replace(',', '');\n  } catch (AttributeError) {\n    review_count = \"NA\";\n  }\n  console.log(\"Total reviews = \", review_count);\n\n  // print availablility\n  try {\n    available = soup.find(\"div\", attrs = {\n      'id': 'availability'\n    });\n    available = available.find(\"span\").nextElement._text.trim().replace(',', '');\n  } catch (AttributeError) {\n    available = \"NA\";\n  }\n  console.log(\"Availability = \", available);\n\n  ///////////// FILPKART ////////////////\n\n  flipkart_url = \"https://www.flipkart.com/search?q=\" + title_string.split(' ').join('+');\n  console.log(flipkart_url);\n  data_fl = new JSSoup(await (await fetch(flipkart_url, {\n    method: 'get',\n    headers: HEADERS\n  })).text());\n  divs = data_fl.findAll('div', attrs = {\n    'class': '_1AtVbE'\n  });\n  // console.log(divs)\n  var flip_link = undefined;\n  var price = 'NA';\n  var rating = 'NA';\n  for (i in divs) {\n    div = divs[i];\n    if (div.find('a', attrs = {\n      'class': '_1fQZEK'\n    }) != undefined) {\n      prod_box = div.find('a', attrs = {\n        'class': '_1fQZEK'\n      });\n      flip_link = prod_box.attrs['href'];\n      rating = prod_box.find('div', attrs = {\n        'class': '_3LWZlK'\n      }).nextElement._text;\n      // document.getElementById(\"rating\").innerHTML= rating;\n      // console.log(rating)\n\n      total_ratings = prod_box.find('span', attrs = {\n        'class': '_2_R_DZ'\n      }).nextElement.nextElement.nextElement._text;\n      // document.getElementById(\"total_ratings\").innerHTML=total_ratings;\n      // console.log(total_ratings)\n\n      reviews = prod_box.find('span', attrs = {\n        'class': '_13vcmD'\n      }).nextElement.nextElement.nextElement._text;\n      // document.getElementById(\"reviews\").innerHTML=reviews;\n\n      Availability = prod_box.findAll('div', attrs = {\n        'class': '_3G6awp'\n      }).length > 0;\n      // document.getElementById(\"Availability\").innerHTML=Availability;\n      // console.log(Availability)\n\n      price = prod_box.find('div', attrs = {\n        'class': '_30jeq3'\n      }).nextElement._text;\n      // document.getElementById(\"price\").innerHTML=price;\n      // console.log(price)\n\n      break;\n    }\n  }\n\n  // flipkart_url_1 = \"https://www.flipkart.com\" + flip_link\n\n  // data_fl_1 = new JSSoup(await (await fetch(flipkart_url_1, {method : 'get', headers : HEADERS})).text())\n  // divs = data_fl_1.findAll('div', attrs = {'class' : \"_30jeq3\"})\n\n  // for (i in divs) {\n  //     div = divs[i]\n  //     if (div.attrs['class'] == \"_30jeq3 _16Jk6d\") price = div.nextElement._text\n  // }\n\n  // console.log(price)\n\n  return [price];\n};\nexport default Scrapper;","map":{"version":3,"names":["React","JSSoup","http","Scrapper","url","HEADERS","response","fetch","method","headers","text","console","log","res","soup","amazon_img","find","attrs","title","title_value","nextElement","_text","title_string","trim","replace","AttributeError","price_symbol","price","rating","review_count","available","flipkart_url","split","join","data_fl","divs","findAll","flip_link","undefined","i","div","prod_box","total_ratings","reviews","Availability","length"],"sources":["C:/Users/05200/Documents/React/price-compare-extension/src/Component/scrapper.js"],"sourcesContent":["import React from \"react\";\r\nimport JSSoup from 'jssoup';\r\nimport http from 'http';\r\n\r\nScrapper = async () => {\r\n\r\n    ////////// AMAZON ///////////\r\n    let url = \"https://www.amazon.in/Dell-Inspiron-i5-1235U-39-62Cms-D560871WIN9B/dp/B0BH4SCYQ3/ref=sr_1_1_sspa?crid=DZP3SM2XBITL&keywords=dell+i5&qid=1673438956&sprefix=dell+i5%2Caps%2C311&sr=8-1-spons&sp_csd=d2lkZ2V0TmFtZT1zcF9hdGY&psc=1\"\r\n\r\n    let HEADERS = {'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36', 'Accept-Language': 'en-US, en;q=0.5'}\r\n\r\n    const response = await fetch(url, {method : 'GET', headers : HEADERS});\r\n    const text = await response.text();\r\n    console.log(text);\r\n\r\n    // const res  = await axios.get(url, {\r\n    //     headers : HEADERS\r\n    // });\r\n    \r\n    console.log(res);\r\n\r\n    // const text = \"tedbsfr\";\r\n\r\n    var soup = new JSSoup(text);\r\n    amazon_img = soup.find('div', attrs = {'id' : 'imageBlock'}).find('span', attrs = {'class' : 'a-button-text'}).find('img').attrs['src']\r\n    // console.log(souper)\r\n\r\n    // retrieving product title\r\n    try {\r\n        // Outer Tag Object\r\n        title = soup.find('span', attrs={'id': 'productTitle'})\r\n        \r\n        // console.log(title)\r\n        // Inner Navigable String Object\r\n        title_value = title.nextElement._text\r\n\r\n        // Title as a string value\r\n        title_string = title_value.trim().replace(',', '')\r\n    }\r\n    catch (AttributeError) {\r\n        title_string = \"NA\"\r\n    }\r\n\r\n    console.log(\"product Title = \", title_string)\r\n\r\n    // retrieving price\r\n    try {\r\n        price_symbol = soup.find(\"span\", attrs = {'class': 'a-price-symbol'}).nextElement._text.trim().replace(',', '')\r\n        price = soup.find(\"span\", attrs = {'class': 'a-price-whole'}).nextElement._text.trim().replace(',', '')\r\n        price = price_symbol + price\r\n        // we are omitting unnecessary spaces\r\n        // and commas form our string\r\n    }\r\n\r\n    catch (AttributeError) {\r\n        price = \"NA\"\r\n    }\r\n    \r\n    console.log(\"Products price = \", price)\r\n\r\n    // retrieving product rating\r\n    try {\r\n        rating = soup.find(\"i\", attrs={'class': 'a-icon a-icon-star a-star-4-5'}).nextElement._text.trim().replace(',', '')\r\n    }\r\n        \r\n    catch (AttributeError) {\r\n        try{\r\n            rating = soup.find(\"span\", attrs={'class': 'a-icon-alt'}).nextElement._text.trim().replace(',', '')\r\n        }\r\n        catch {\r\n            rating = \"NA\"\r\n        }\r\n    }\r\n\r\n    console.log(\"Overall rating = \", rating)\r\n\r\n    try {\r\n        review_count = soup.find(\"span\", attrs={'id': 'acrCustomerReviewText'}).nextElement._text.trim().replace(',', '')\r\n    }\r\n\r\n    catch (AttributeError) {\r\n        review_count = \"NA\"\r\n    }\r\n\r\n    console.log(\"Total reviews = \", review_count)\r\n\r\n    // print availablility\r\n    try {\r\n        available = soup.find(\"div\", attrs={'id': 'availability'})\r\n        available = available.find(\"span\").nextElement._text.trim().replace(',', '')\r\n    }\r\n    catch (AttributeError) {\r\n        available = \"NA\"\r\n    }\r\n\r\n    console.log(\"Availability = \", available)\r\n\r\n    ///////////// FILPKART ////////////////\r\n\r\n    flipkart_url = \"https://www.flipkart.com/search?q=\" + title_string.split(' ').join('+')\r\n    console.log(flipkart_url)\r\n    data_fl = new JSSoup(await (await fetch(flipkart_url, {method : 'get', headers : HEADERS})).text())\r\n\r\n    divs = data_fl.findAll('div', attrs = {'class' : '_1AtVbE'})\r\n    // console.log(divs)\r\n    var flip_link = undefined\r\n    var price = 'NA'\r\n    var rating = 'NA'\r\n\r\n    for (i in divs) {\r\n        div = divs[i]\r\n        if (div.find('a', attrs = {'class' : '_1fQZEK'}) != undefined) {\r\n            prod_box = div.find('a', attrs = {'class' : '_1fQZEK'})\r\n            flip_link = prod_box.attrs['href']\r\n            \r\n            rating = prod_box.find('div', attrs = {'class' : '_3LWZlK'}).nextElement._text\r\n            // document.getElementById(\"rating\").innerHTML= rating;\r\n            // console.log(rating)\r\n\r\n            total_ratings = prod_box.find('span', attrs = {'class' : '_2_R_DZ'}).nextElement.nextElement.nextElement._text\r\n            // document.getElementById(\"total_ratings\").innerHTML=total_ratings;\r\n             // console.log(total_ratings)\r\n\r\n            reviews = prod_box.find('span', attrs = {'class' : '_13vcmD'}).nextElement.nextElement.nextElement._text\r\n            // document.getElementById(\"reviews\").innerHTML=reviews;\r\n\r\n\r\n            Availability = (prod_box.findAll('div', attrs = {'class' : '_3G6awp'})).length > 0\r\n            // document.getElementById(\"Availability\").innerHTML=Availability;\r\n            // console.log(Availability)\r\n\r\n            price = prod_box.find('div', attrs = {'class' : '_30jeq3'}).nextElement._text\r\n            // document.getElementById(\"price\").innerHTML=price;\r\n            // console.log(price)\r\n\r\n            break\r\n        }\r\n    }\r\n\r\n    // flipkart_url_1 = \"https://www.flipkart.com\" + flip_link\r\n    \r\n    // data_fl_1 = new JSSoup(await (await fetch(flipkart_url_1, {method : 'get', headers : HEADERS})).text())\r\n    // divs = data_fl_1.findAll('div', attrs = {'class' : \"_30jeq3\"})\r\n\r\n    // for (i in divs) {\r\n    //     div = divs[i]\r\n    //     if (div.attrs['class'] == \"_30jeq3 _16Jk6d\") price = div.nextElement._text\r\n    // }\r\n\r\n    // console.log(price)\r\n\r\n    return [price]\r\n\r\n}\r\nexport default Scrapper;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}