{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport JSSoup from 'jssoup';\nconst Scrapper = () => {\n  const scrapper = async () => {\n\n    //   ////////// AMAZON ///////////\n    //   let url = \"https://www.amazon.in/Dell-Inspiron-i5-1235U-39-62Cms-D560871WIN9B/dp/B0BH4SCYQ3/ref=sr_1_1_sspa?crid=DZP3SM2XBITL&keywords=dell+i5&qid=1673438956&sprefix=dell+i5%2Caps%2C311&sr=8-1-spons&sp_csd=d2lkZ2V0TmFtZT1zcF9hdGY&psc=1\"\n\n    //   let HEADERS = { 'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36', 'Accept-Language': 'en-US, en;q=0.5' }\n\n    //   const response = await fetch(url, { method: 'GET', headers: HEADERS });\n    //   const text = await response.text();\n    //   console.log(text);\n\n    //   var soup = new JSSoup(text);\n    //   let amazon_img = soup.find('div', { 'id': 'imageBlock' }).find('span', { 'class': 'a-button-text' }).find('img').attrs['src']\n\n    //   // retrieving product title\n    //   try {\n    //     // Outer Tag Object\n    //     let title = soup.find('span', { 'id': 'productTitle' })\n\n    //     // Inner Navigable String Object\n    //     let title_value = title.nextElement._text\n\n    //     // Title as a string value\n    //     let title_string = title_value.trim().replace(',', '')\n    //     console.log(\"product Title = \", title_string)\n    //   }\n    //   catch (AttributeError) {\n    //     let title_string = \"NA\"\n    //   }\n\n    //   // retrieving price\n    //   const price = \"NA\"\n    //   try {\n    //     let price_symbol = soup.find(\"span\", { 'class': 'a-price-symbol' }).nextElement._text.trim().replace(',', '')\n    //     price = soup.find(\"span\", { 'class': 'a-price-whole' }).nextElement._text.trim().replace(',', '')\n    //     price = price_symbol + price\n    //     // we are omitting unnecessary spaces\n    //     // and commas form our string\n    //     console.log(\"Products price = \", price)\n    //   }\n    //   catch (AttributeError) {\n    //     price = \"NA\"\n    //   }\n\n    //   // retrieving product rating\n    //   const rating = \"NA\"\n    //   try {\n    //     rating = soup.find(\"i\", { 'class': 'a-icon a-icon-star a-star-4-5' }).nextElement._text.trim().replace(',', '')\n    //     console.log(\"Overall rating = \", rating)\n    //   }\n\n    //   catch (AttributeError) {\n    //     try {\n    //       rating = soup.find(\"span\", { 'class': 'a-icon-alt' }).nextElement._text.trim().replace(',', '')\n    //       console.log(\"Overall rating = \", rating)\n    //     }\n    //     catch {\n    //       rating = \"NA\"\n    //     }\n    //   }\n\n    //   try {\n    //     let review_count = soup.find(\"span\",  { 'id': 'acrCustomerReviewText' }).nextElement._text.trim().replace(',', '')\n    //     console.log(\"Total reviews = \", review_count)\n    //   }\n    //   catch (AttributeError) {\n    //     let review_count = \"NA\"\n    //   }\n\n    //     console.log(\"Flipkart price = \", price);\n    //     console.log(\"Flipkart rating = \", rating);\n    //     // console.log(\"Flipkart link = \", flip_link);\n    //     return [price, rating];\n  };\n  return scrapper();\n};\n_c = Scrapper;\nexport default Scrapper;\nvar _c;\n$RefreshReg$(_c, \"Scrapper\");","map":{"version":3,"names":["React","useEffect","JSSoup","Scrapper","scrapper","_c","$RefreshReg$"],"sources":["C:/Users/05200/Documents/React/price-compare-extension/src/Component/scrapper.js"],"sourcesContent":["import React,{useEffect} from \"react\";\r\nimport JSSoup from 'jssoup';\r\n\r\nconst Scrapper = () => {\r\n    const scrapper = async () => {\r\n\r\n    //   ////////// AMAZON ///////////\r\n    //   let url = \"https://www.amazon.in/Dell-Inspiron-i5-1235U-39-62Cms-D560871WIN9B/dp/B0BH4SCYQ3/ref=sr_1_1_sspa?crid=DZP3SM2XBITL&keywords=dell+i5&qid=1673438956&sprefix=dell+i5%2Caps%2C311&sr=8-1-spons&sp_csd=d2lkZ2V0TmFtZT1zcF9hdGY&psc=1\"\r\n\r\n    //   let HEADERS = { 'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36', 'Accept-Language': 'en-US, en;q=0.5' }\r\n\r\n    //   const response = await fetch(url, { method: 'GET', headers: HEADERS });\r\n    //   const text = await response.text();\r\n    //   console.log(text);\r\n\r\n    //   var soup = new JSSoup(text);\r\n    //   let amazon_img = soup.find('div', { 'id': 'imageBlock' }).find('span', { 'class': 'a-button-text' }).find('img').attrs['src']\r\n\r\n    //   // retrieving product title\r\n    //   try {\r\n    //     // Outer Tag Object\r\n    //     let title = soup.find('span', { 'id': 'productTitle' })\r\n\r\n    //     // Inner Navigable String Object\r\n    //     let title_value = title.nextElement._text\r\n\r\n    //     // Title as a string value\r\n    //     let title_string = title_value.trim().replace(',', '')\r\n    //     console.log(\"product Title = \", title_string)\r\n    //   }\r\n    //   catch (AttributeError) {\r\n    //     let title_string = \"NA\"\r\n    //   }\r\n\r\n    //   // retrieving price\r\n    //   const price = \"NA\"\r\n    //   try {\r\n    //     let price_symbol = soup.find(\"span\", { 'class': 'a-price-symbol' }).nextElement._text.trim().replace(',', '')\r\n    //     price = soup.find(\"span\", { 'class': 'a-price-whole' }).nextElement._text.trim().replace(',', '')\r\n    //     price = price_symbol + price\r\n    //     // we are omitting unnecessary spaces\r\n    //     // and commas form our string\r\n    //     console.log(\"Products price = \", price)\r\n    //   }\r\n    //   catch (AttributeError) {\r\n    //     price = \"NA\"\r\n    //   }\r\n\r\n    //   // retrieving product rating\r\n    //   const rating = \"NA\"\r\n    //   try {\r\n    //     rating = soup.find(\"i\", { 'class': 'a-icon a-icon-star a-star-4-5' }).nextElement._text.trim().replace(',', '')\r\n    //     console.log(\"Overall rating = \", rating)\r\n    //   }\r\n\r\n    //   catch (AttributeError) {\r\n    //     try {\r\n    //       rating = soup.find(\"span\", { 'class': 'a-icon-alt' }).nextElement._text.trim().replace(',', '')\r\n    //       console.log(\"Overall rating = \", rating)\r\n    //     }\r\n    //     catch {\r\n    //       rating = \"NA\"\r\n    //     }\r\n    //   }\r\n\r\n    //   try {\r\n    //     let review_count = soup.find(\"span\",  { 'id': 'acrCustomerReviewText' }).nextElement._text.trim().replace(',', '')\r\n    //     console.log(\"Total reviews = \", review_count)\r\n    //   }\r\n    //   catch (AttributeError) {\r\n    //     let review_count = \"NA\"\r\n    //   }\r\n\r\n    //     console.log(\"Flipkart price = \", price);\r\n    //     console.log(\"Flipkart rating = \", rating);\r\n    //     // console.log(\"Flipkart link = \", flip_link);\r\n    //     return [price, rating];\r\n    }\r\n    return scrapper();\r\n}\r\n\r\nexport default Scrapper;\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAEC,SAAS,QAAO,OAAO;AACrC,OAAOC,MAAM,MAAM,QAAQ;AAE3B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;;IAE7B;IACA;;IAEA;;IAEA;IACA;IACA;;IAEA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;EAAA,CACC;EACD,OAAOA,QAAQ,EAAE;AACrB,CAAC;AAAAC,EAAA,GA5EKF,QAAQ;AA8Ed,eAAeA,QAAQ;AAAC,IAAAE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}