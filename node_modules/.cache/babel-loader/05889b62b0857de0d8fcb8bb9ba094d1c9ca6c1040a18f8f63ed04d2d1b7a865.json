{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport JSSoup from 'jssoup';\n// import fetch from 'node-fetch';\n\n// const Scrapper = async () => {\n\n//     ////////// AMAZON ///////////\n//     let url = \"https://www.amazon.in/Dell-Inspiron-i5-1235U-39-62Cms-D560871WIN9B/dp/B0BH4SCYQ3/ref=sr_1_1_sspa?crid=DZP3SM2XBITL&keywords=dell+i5&qid=1673438956&sprefix=dell+i5%2Caps%2C311&sr=8-1-spons&sp_csd=d2lkZ2V0TmFtZT1zcF9hdGY&psc=1\"\n\n//     let HEADERS = {'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36', 'Accept-Language': 'en-US, en;q=0.5'}\n\n//     const response = await fetch(url, {method : 'GET', headers : HEADERS});\n//     const text = await response.text();\n//     console.log(text);\n\n//     // const res  = await axios.get(url, {\n//     //     headers : HEADERS\n//     // });\n\n//     // console.log(res);\n\n//     // const text = \"tedbsfr\";\n\n//     var soup = new JSSoup(text);\n//     var amazon_img = soup.find('div', {'id' : 'imageBlock'}).find('span', {'class' : 'a-button-text'}).find('img').attrs['src']\n//     // console.log(souper)\n\n//     // retrieving product title\n//     // try {\n//     //     // Outer Tag Object\n//     //     title = soup.find('span', attrs={'id': 'productTitle'})\n\n//     //     // console.log(title)\n//     //     // Inner Navigable String Object\n//     //     title_value = title.nextElement._text\n\n//     //     // Title as a string value\n//     //     title_string = title_value.trim().replace(',', '')\n//     // }\n//     // catch (AttributeError) {\n//     //     title_string = \"NA\"\n//     // }\n\n//     // console.log(\"product Title = \", title_string)\n\n//     // // retrieving price\n//     // try {\n//     //     price_symbol = soup.find(\"span\", {'class': 'a-price-symbol'}).nextElement._text.trim().replace(',', '')\n//     //     price = soup.find(\"span\", {'class': 'a-price-whole'}).nextElement._text.trim().replace(',', '')\n//     //     price = price_symbol + price\n//     //     // we are omitting unnecessary spaces\n//     //     // and commas form our string\n//     // }\n\n//     // catch (AttributeError) {\n//     //     price = \"NA\"\n//     // }\n\n//     // console.log(\"Products price = \", price)\n\n//     // // retrieving product rating\n//     // try {\n//     //     rating = soup.find(\"i\", attrs={'class': 'a-icon a-icon-star a-star-4-5'}).nextElement._text.trim().replace(',', '')\n//     // }\n\n//     // catch (AttributeError) {\n//     //     try{\n//     //         rating = soup.find(\"span\", attrs={'class': 'a-icon-alt'}).nextElement._text.trim().replace(',', '')\n//     //     }\n//     //     catch {\n//     //         rating = \"NA\"\n//     //     }\n//     // }\n\n//     // console.log(\"Overall rating = \", rating)\n\n//     // try {\n//     //     review_count = soup.find(\"span\", attrs={'id': 'acrCustomerReviewText'}).nextElement._text.trim().replace(',', '')\n//     // }\n\n//     // catch (AttributeError) {\n//     //     review_count = \"NA\"\n//     // }\n\n//     // console.log(\"Total reviews = \", review_count)\n\n//     // // print availablility\n//     // try {\n//     //     available = soup.find(\"div\", attrs={'id': 'availability'})\n//     //     available = available.find(\"span\").nextElement._text.trim().replace(',', '')\n//     // }\n//     // catch (AttributeError) {\n//     //     available = \"NA\"\n//     // }\n\n//     // console.log(\"Availability = \", available)\n\n//     // ///////////// FILPKART ////////////////\n\n//     // flipkart_url = \"https://www.flipkart.com/search?q=\" + title_string.split(' ').join('+')\n//     // console.log(flipkart_url)\n//     // data_fl = new JSSoup(await (await fetch(flipkart_url, {method : 'get', headers : HEADERS})).text())\n\n//     // divs = data_fl.findAll('div', {'class' : '_1AtVbE'})\n//     // // console.log(divs)\n//     // var flip_link = undefined\n//     // var price = 'NA'\n//     // var rating = 'NA'\n\n//     // for (i in divs) {\n//     //     div = divs[i]\n//     //     if (div.find('a', {'class' : '_1fQZEK'}) != undefined) {\n//     //         prod_box = div.find('a', {'class' : '_1fQZEK'})\n//     //         flip_link = prod_box.attrs['href']\n\n//     //         rating = prod_box.find('div', {'class' : '_3LWZlK'}).nextElement._text\n//     //         // document.getElementById(\"rating\").innerHTML= rating;\n//     //         // console.log(rating)\n\n//     //         total_ratings = prod_box.find('span', {'class' : '_2_R_DZ'}).nextElement.nextElement.nextElement._text\n//     //         // document.getElementById(\"total_ratings\").innerHTML=total_ratings;\n//     //          // console.log(total_ratings)\n\n//     //         reviews = prod_box.find('span', {'class' : '_13vcmD'}).nextElement.nextElement.nextElement._text\n//     //         // document.getElementById(\"reviews\").innerHTML=reviews;\n\n//     //         Availability = (prod_box.findAll('div', {'class' : '_3G6awp'})).length > 0\n//     //         // document.getElementById(\"Availability\").innerHTML=Availability;\n//     //         // console.log(Availability)\n\n//     //         price = prod_box.find('div', {'class' : '_30jeq3'}).nextElement._text\n//     //         // document.getElementById(\"price\").innerHTML=price;\n//     //         // console.log(price)\n\n//     //         break\n//     //     }\n//     // }\n\n//     // // flipkart_url_1 = \"https://www.flipkart.com\" + flip_link\n\n//     // // data_fl_1 = new JSSoup(await (await fetch(flipkart_url_1, {method : 'get', headers : HEADERS})).text())\n//     // // divs = data_fl_1.findAll('div', {'class' : \"_30jeq3\"})\n\n//     // // for (i in divs) {\n//     // //     div = divs[i]\n//     // //     if (div.attrs['class'] == \"_30jeq3 _16Jk6d\") price = div.nextElement._text\n//     // // }\n\n//     // // console.log(price)\n\n//     // return [price]\n\n// }\n\nconst Scrapper = () => {\n  const scrapper = async () => {\n    ////////// AMAZON ///////////\n    let url = \"https://www.amazon.in/Dell-Inspiron-i5-1235U-39-62Cms-D560871WIN9B/dp/B0BH4SCYQ3/ref=sr_1_1_sspa?crid=DZP3SM2XBITL&keywords=dell+i5&qid=1673438956&sprefix=dell+i5%2Caps%2C311&sr=8-1-spons&sp_csd=d2lkZ2V0TmFtZT1zcF9hdGY&psc=1\";\n    let HEADERS = {\n      'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36',\n      'Accept-Language': 'en-US, en;q=0.5'\n    };\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: HEADERS\n    });\n    const text = await response.text();\n    console.log(text);\n    var soup = new JSSoup(text);\n    let amazon_img = soup.find('div', {\n      'id': 'imageBlock'\n    }).find('span', {\n      'class': 'a-button-text'\n    }).find('img').attrs['src'];\n\n    // retrieving product title\n    try {\n      // Outer Tag Object\n      let title = soup.find('span', {\n        'id': 'productTitle'\n      });\n\n      // Inner Navigable String Object\n      let title_value = title.nextElement._text;\n\n      // Title as a string value\n      let title_string = title_value.trim().replace(',', '');\n      console.log(\"product Title = \", title_string);\n    } catch (AttributeError) {\n      let title_string = \"NA\";\n    }\n\n    // retrieving price\n    const price = \"NA\";\n    try {\n      let price_symbol = soup.find(\"span\", {\n        'class': 'a-price-symbol'\n      }).nextElement._text.trim().replace(',', '');\n      price = soup.find(\"span\", {\n        'class': 'a-price-whole'\n      }).nextElement._text.trim().replace(',', '');\n      price = price_symbol + price;\n      // we are omitting unnecessary spaces\n      // and commas form our string\n      console.log(\"Products price = \", price);\n    } catch (AttributeError) {\n      price = \"NA\";\n    }\n\n    // retrieving product rating\n    const rating = \"NA\";\n    try {\n      rating = soup.find(\"i\", {\n        'class': 'a-icon a-icon-star a-star-4-5'\n      }).nextElement._text.trim().replace(',', '');\n      console.log(\"Overall rating = \", rating);\n    } catch (AttributeError) {\n      try {\n        rating = soup.find(\"span\", {\n          'class': 'a-icon-alt'\n        }).nextElement._text.trim().replace(',', '');\n        console.log(\"Overall rating = \", rating);\n      } catch {\n        rating = \"NA\";\n      }\n    }\n    try {\n      let review_count = soup.find(\"span\", {\n        'id': 'acrCustomerReviewText'\n      }).nextElement._text.trim().replace(',', '');\n      console.log(\"Total reviews = \", review_count);\n    } catch (AttributeError) {\n      let review_count = \"NA\";\n    }\n    console.log(\"Flipkart price = \", price);\n    console.log(\"Flipkart rating = \", rating);\n    // console.log(\"Flipkart link = \", flip_link);\n    return [price, rating];\n  };\n  return scrapper();\n};\n_c = Scrapper;\nexport default Scrapper;\nvar _c;\n$RefreshReg$(_c, \"Scrapper\");","map":{"version":3,"names":["React","useEffect","JSSoup","Scrapper","scrapper","url","HEADERS","response","fetch","method","headers","text","console","log","soup","amazon_img","find","attrs","title","title_value","nextElement","_text","title_string","trim","replace","AttributeError","price","price_symbol","rating","review_count","_c","$RefreshReg$"],"sources":["C:/Users/05200/Documents/React/price-compare-extension/src/Component/scrapper.js"],"sourcesContent":["import React,{useEffect} from \"react\";\r\nimport JSSoup from 'jssoup';\r\n// import fetch from 'node-fetch';\r\n\r\n// const Scrapper = async () => {\r\n\r\n//     ////////// AMAZON ///////////\r\n//     let url = \"https://www.amazon.in/Dell-Inspiron-i5-1235U-39-62Cms-D560871WIN9B/dp/B0BH4SCYQ3/ref=sr_1_1_sspa?crid=DZP3SM2XBITL&keywords=dell+i5&qid=1673438956&sprefix=dell+i5%2Caps%2C311&sr=8-1-spons&sp_csd=d2lkZ2V0TmFtZT1zcF9hdGY&psc=1\"\r\n\r\n//     let HEADERS = {'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36', 'Accept-Language': 'en-US, en;q=0.5'}\r\n\r\n//     const response = await fetch(url, {method : 'GET', headers : HEADERS});\r\n//     const text = await response.text();\r\n//     console.log(text);\r\n\r\n//     // const res  = await axios.get(url, {\r\n//     //     headers : HEADERS\r\n//     // });\r\n    \r\n//     // console.log(res);\r\n\r\n//     // const text = \"tedbsfr\";\r\n\r\n//     var soup = new JSSoup(text);\r\n//     var amazon_img = soup.find('div', {'id' : 'imageBlock'}).find('span', {'class' : 'a-button-text'}).find('img').attrs['src']\r\n//     // console.log(souper)\r\n\r\n//     // retrieving product title\r\n//     // try {\r\n//     //     // Outer Tag Object\r\n//     //     title = soup.find('span', attrs={'id': 'productTitle'})\r\n        \r\n//     //     // console.log(title)\r\n//     //     // Inner Navigable String Object\r\n//     //     title_value = title.nextElement._text\r\n\r\n//     //     // Title as a string value\r\n//     //     title_string = title_value.trim().replace(',', '')\r\n//     // }\r\n//     // catch (AttributeError) {\r\n//     //     title_string = \"NA\"\r\n//     // }\r\n\r\n//     // console.log(\"product Title = \", title_string)\r\n\r\n//     // // retrieving price\r\n//     // try {\r\n//     //     price_symbol = soup.find(\"span\", {'class': 'a-price-symbol'}).nextElement._text.trim().replace(',', '')\r\n//     //     price = soup.find(\"span\", {'class': 'a-price-whole'}).nextElement._text.trim().replace(',', '')\r\n//     //     price = price_symbol + price\r\n//     //     // we are omitting unnecessary spaces\r\n//     //     // and commas form our string\r\n//     // }\r\n\r\n//     // catch (AttributeError) {\r\n//     //     price = \"NA\"\r\n//     // }\r\n    \r\n//     // console.log(\"Products price = \", price)\r\n\r\n//     // // retrieving product rating\r\n//     // try {\r\n//     //     rating = soup.find(\"i\", attrs={'class': 'a-icon a-icon-star a-star-4-5'}).nextElement._text.trim().replace(',', '')\r\n//     // }\r\n        \r\n//     // catch (AttributeError) {\r\n//     //     try{\r\n//     //         rating = soup.find(\"span\", attrs={'class': 'a-icon-alt'}).nextElement._text.trim().replace(',', '')\r\n//     //     }\r\n//     //     catch {\r\n//     //         rating = \"NA\"\r\n//     //     }\r\n//     // }\r\n\r\n//     // console.log(\"Overall rating = \", rating)\r\n\r\n//     // try {\r\n//     //     review_count = soup.find(\"span\", attrs={'id': 'acrCustomerReviewText'}).nextElement._text.trim().replace(',', '')\r\n//     // }\r\n\r\n//     // catch (AttributeError) {\r\n//     //     review_count = \"NA\"\r\n//     // }\r\n\r\n//     // console.log(\"Total reviews = \", review_count)\r\n\r\n//     // // print availablility\r\n//     // try {\r\n//     //     available = soup.find(\"div\", attrs={'id': 'availability'})\r\n//     //     available = available.find(\"span\").nextElement._text.trim().replace(',', '')\r\n//     // }\r\n//     // catch (AttributeError) {\r\n//     //     available = \"NA\"\r\n//     // }\r\n\r\n//     // console.log(\"Availability = \", available)\r\n\r\n//     // ///////////// FILPKART ////////////////\r\n\r\n//     // flipkart_url = \"https://www.flipkart.com/search?q=\" + title_string.split(' ').join('+')\r\n//     // console.log(flipkart_url)\r\n//     // data_fl = new JSSoup(await (await fetch(flipkart_url, {method : 'get', headers : HEADERS})).text())\r\n\r\n//     // divs = data_fl.findAll('div', {'class' : '_1AtVbE'})\r\n//     // // console.log(divs)\r\n//     // var flip_link = undefined\r\n//     // var price = 'NA'\r\n//     // var rating = 'NA'\r\n\r\n//     // for (i in divs) {\r\n//     //     div = divs[i]\r\n//     //     if (div.find('a', {'class' : '_1fQZEK'}) != undefined) {\r\n//     //         prod_box = div.find('a', {'class' : '_1fQZEK'})\r\n//     //         flip_link = prod_box.attrs['href']\r\n            \r\n//     //         rating = prod_box.find('div', {'class' : '_3LWZlK'}).nextElement._text\r\n//     //         // document.getElementById(\"rating\").innerHTML= rating;\r\n//     //         // console.log(rating)\r\n\r\n//     //         total_ratings = prod_box.find('span', {'class' : '_2_R_DZ'}).nextElement.nextElement.nextElement._text\r\n//     //         // document.getElementById(\"total_ratings\").innerHTML=total_ratings;\r\n//     //          // console.log(total_ratings)\r\n\r\n//     //         reviews = prod_box.find('span', {'class' : '_13vcmD'}).nextElement.nextElement.nextElement._text\r\n//     //         // document.getElementById(\"reviews\").innerHTML=reviews;\r\n\r\n\r\n//     //         Availability = (prod_box.findAll('div', {'class' : '_3G6awp'})).length > 0\r\n//     //         // document.getElementById(\"Availability\").innerHTML=Availability;\r\n//     //         // console.log(Availability)\r\n\r\n//     //         price = prod_box.find('div', {'class' : '_30jeq3'}).nextElement._text\r\n//     //         // document.getElementById(\"price\").innerHTML=price;\r\n//     //         // console.log(price)\r\n\r\n//     //         break\r\n//     //     }\r\n//     // }\r\n\r\n//     // // flipkart_url_1 = \"https://www.flipkart.com\" + flip_link\r\n    \r\n//     // // data_fl_1 = new JSSoup(await (await fetch(flipkart_url_1, {method : 'get', headers : HEADERS})).text())\r\n//     // // divs = data_fl_1.findAll('div', {'class' : \"_30jeq3\"})\r\n\r\n//     // // for (i in divs) {\r\n//     // //     div = divs[i]\r\n//     // //     if (div.attrs['class'] == \"_30jeq3 _16Jk6d\") price = div.nextElement._text\r\n//     // // }\r\n\r\n//     // // console.log(price)\r\n\r\n//     // return [price]\r\n\r\n// }\r\n\r\nconst Scrapper = () => {\r\n    const scrapper = async () => {\r\n\r\n      ////////// AMAZON ///////////\r\n      let url = \"https://www.amazon.in/Dell-Inspiron-i5-1235U-39-62Cms-D560871WIN9B/dp/B0BH4SCYQ3/ref=sr_1_1_sspa?crid=DZP3SM2XBITL&keywords=dell+i5&qid=1673438956&sprefix=dell+i5%2Caps%2C311&sr=8-1-spons&sp_csd=d2lkZ2V0TmFtZT1zcF9hdGY&psc=1\"\r\n\r\n      let HEADERS = { 'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36', 'Accept-Language': 'en-US, en;q=0.5' }\r\n\r\n      const response = await fetch(url, { method: 'GET', headers: HEADERS });\r\n      const text = await response.text();\r\n      console.log(text);\r\n\r\n      var soup = new JSSoup(text);\r\n      let amazon_img = soup.find('div', { 'id': 'imageBlock' }).find('span', { 'class': 'a-button-text' }).find('img').attrs['src']\r\n\r\n      // retrieving product title\r\n      try {\r\n        // Outer Tag Object\r\n        let title = soup.find('span', { 'id': 'productTitle' })\r\n\r\n        // Inner Navigable String Object\r\n        let title_value = title.nextElement._text\r\n\r\n        // Title as a string value\r\n        let title_string = title_value.trim().replace(',', '')\r\n        console.log(\"product Title = \", title_string)\r\n      }\r\n      catch (AttributeError) {\r\n        let title_string = \"NA\"\r\n      }\r\n\r\n      // retrieving price\r\n      const price = \"NA\"\r\n      try {\r\n        let price_symbol = soup.find(\"span\", { 'class': 'a-price-symbol' }).nextElement._text.trim().replace(',', '')\r\n        price = soup.find(\"span\", { 'class': 'a-price-whole' }).nextElement._text.trim().replace(',', '')\r\n        price = price_symbol + price\r\n        // we are omitting unnecessary spaces\r\n        // and commas form our string\r\n        console.log(\"Products price = \", price)\r\n      }\r\n      catch (AttributeError) {\r\n        price = \"NA\"\r\n      }\r\n\r\n      // retrieving product rating\r\n      const rating = \"NA\"\r\n      try {\r\n        rating = soup.find(\"i\", { 'class': 'a-icon a-icon-star a-star-4-5' }).nextElement._text.trim().replace(',', '')\r\n        console.log(\"Overall rating = \", rating)\r\n      }\r\n\r\n      catch (AttributeError) {\r\n        try {\r\n          rating = soup.find(\"span\", { 'class': 'a-icon-alt' }).nextElement._text.trim().replace(',', '')\r\n          console.log(\"Overall rating = \", rating)\r\n        }\r\n        catch {\r\n          rating = \"NA\"\r\n        }\r\n      }\r\n\r\n      try {\r\n        let review_count = soup.find(\"span\",  { 'id': 'acrCustomerReviewText' }).nextElement._text.trim().replace(',', '')\r\n        console.log(\"Total reviews = \", review_count)\r\n      }\r\n      catch (AttributeError) {\r\n        let review_count = \"NA\"\r\n      }\r\n\r\n        console.log(\"Flipkart price = \", price);\r\n        console.log(\"Flipkart rating = \", rating);\r\n        // console.log(\"Flipkart link = \", flip_link);\r\n        return [price, rating];\r\n    }\r\n    return scrapper();\r\n}\r\nexport default Scrapper;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}